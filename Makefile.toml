[config]
default_to_workspace = false

[tasks.test]
args = ["test", "--workspace", "--", "--nocapture"]
clear = true
command = "cargo"

[tasks.clippy]
args = ["hack", "--feature-powerset", "--no-dev-deps", "clippy", "--", "-D", "warnings"]
command = "cargo"
install_crate = "cargo-hack"

[tasks.build-extra]
script = '''
cargo build --features=ipc-health-check,http-health-check --examples
cargo build --features=all-async,ipc-health-check,http-health-check --examples
cargo build --features=all-sync,ipc-health-check,http-health-check --examples
cargo build --features=all-async,all-sync,ipc-health-check,http-health-check --examples
'''

[tasks.build-powerset]
args = [
  "hack",
  "--feature-powerset",
  "--exclude-features",
  "cli client server console direct logging server async-tokio ipc-health-check http-health-check grpc-health-check",
  "build",
]
command = "cargo"
dependencies = ["build-extra"]
install_crate = "cargo-hack"

[tasks.build-all]
args = ["build", "--features", "all-async,all-sync,ipc-health-check,http-health-check", "--workspace"]
command = "cargo"

[tasks.build-coverage]
args = ["build", "--workspace"]
command = "cargo"
env = {RUSTFLAGS = "-Cinstrument-coverage", LLVM_PROFILE_FILE = "daemon-slayer-%p-%m.profraw"}

[tasks.gen-coverage]
args = ["test", "--workspace"]
command = "cargo"
dependencies = ["build-coverage"]
env = {RUSTFLAGS = "-Cinstrument-coverage", LLVM_PROFILE_FILE = "daemon-slayer-%p-%m.profraw"}

[tasks.copy-coverage]
dependencies = ["gen-coverage"]
script = '''
cp C:\Windows\System32\default.profraw .
'''

[tasks.gen-coverage-report]
args = [
  ".",
  "-s",
  ".",
  "--binary-path",
  "./target/debug/",
  "-t",
  "html",
  "--branch",
  "--ignore-not-existing",
  "--ignore",
  "target/**/*",
  "--ignore",
  "integration-tests/**/*",
  "--ignore",
  "daemon-slayer-macros/**/*",
  "-o",
  "./target/debug/coverage/",
]
command = "grcov"
dependencies = ["copy-coverage"]
install_crate = {rustup_component_name = "llvm-tools-preview", crate_name = "grcov"}

[tasks.cleanup-coverage]
clear = true
dependencies = ["gen-coverage-report"]
script = """
rm *.profraw
handle = glob_array ./**/*.profraw
for path in ${handle}
    rm ${path}
end
"""
script_runner = "@duckscript"

[tasks.coverage]
clear = true
dependencies = ["cleanup-coverage"]
script = "xdg-open target/debug/coverage/index.html"

[tasks.coverage.windows]
clear = true
dependencies = ["cleanup-coverage"]
script = "./target/debug/coverage/index.html"
script_runner = "@shell"
