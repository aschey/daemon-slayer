[config]
default_to_workspace = false

[tasks.test-admin]
args = ["test", "--workspace"]
clear = true
command = "cargo"
env = { RUN_AS_SYSTEM = "true" }

[tasks.test]
args = ["test", "--workspace", "--all-features"]
clear = true
command = "cargo"

[tasks.clippy]
args = [
    "hack",
    "--feature-powerset",
    "--no-dev-deps",
    "clippy",
    "--",
    "-D",
    "warnings",
]
command = "cargo"
install_crate = "cargo-hack"

[tasks.build-all]
script = '''
cargo build --workspace
cargo build --workspace --all-features
'''

[tasks.build-examples]
script = '''
cd examples
cargo build --examples
cd examples/http-axum
cargo build
cd ../grpc-tonic
cargo build
'''

[tasks.coverage]
args = [
    "llvm-cov",
    "--workspace",
    "--all-features",
    "--html",
    "--open",
    "--ignore-filename-regex",
    "\".cargo|.*_test\\.rs|integration_tests.*\"",
]
clear = true
command = "cargo"
install_crate = "cargo-llvm-cov"

[tasks.coverage-admin]
args = [
    "llvm-cov",
    "--workspace",
    "--all-features",
    "--html",
    "--open",
    "--ignore-filename-regex",
    "\".cargo|.*_test\\.rs|integration_tests.*\"",
]
command = "cargo"
env = { RUN_AS_SYSTEM = "true" }
install_crate = "cargo-llvm-cov"

[tasks.update]
args = ["update"]
command = "cargo"
install_crate = "cargo-edit"

[tasks.upgrade]
args = ["upgrade"]
command = "cargo"
install_crate = "cargo-edit"

[tasks.update-all]
dependencies = ["update", "upgrade"]
